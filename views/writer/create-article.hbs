{{!-- views/writer/create-article.hbs --}}
<div class="container mx-auto p-8 bg-white rounded-lg shadow-lg">
  <!-- Page Title -->
  <div class="mb-6 flex justify-between items-center">
    <!-- Title Section -->
    <h1 class="text-4xl font-bold text-gray-800 flex items-center space-x-2">
      <i data-lucide="edit-3" class="text-primary"></i>
      <span>Create Article</span>
    </h1>

    <!-- Action Buttons Section -->
    <div class="flex items-center space-x-4">
      <!-- Back Button -->
      <a href="/writer/articles" class="btn btn-secondary flex items-center space-x-2">
        <i data-lucide="arrow-left"></i>
        <span>Back</span>
      </a>
    </div>
  </div>

  <!-- Create Article Form -->
  <form
    action="/writer/articles/create"
    method="POST"
    enctype="multipart/form-data"
    class="space-y-6"
    id="createArticleForm"
  >
    <!-- Title -->
    <div class="form-control">
      <label
        for="title"
        class="label text-lg font-semibold text-gray-700 flex items-center space-x-2"
      >
        <i data-lucide="type"></i>
        <span>Title</span>
      </label>
      <input
        type="text"
        name="title"
        id="title"
        class="input input-bordered w-full"
        placeholder="Enter the article title"
        required
      />
    </div>

    <!-- Abstract -->
    <div class="form-control">
      <label
        for="abstract"
        class="label text-lg font-semibold text-gray-700 flex items-center space-x-2"
      >
        <i data-lucide="align-left"></i>
        <span>Abstract</span>
      </label>
      <textarea
        name="abstract"
        id="abstract"
        class="textarea textarea-bordered w-full"
        placeholder="Provide a brief summary"
        required
      ></textarea>
    </div>

    <!-- Content -->
    <div class="form-control">
      <label
        for="content"
        class="label text-lg font-semibold text-gray-700 flex items-center space-x-2"
      >
        <i data-lucide="edit"></i>
        <span>Content</span>
      </label>
      <input type="hidden" name="content" id="hiddenContent" />
      <div id="content" class="quill-editor bg-gray-50 border border-gray-300 rounded-md p-4"></div>
    </div>

    <!-- Thumbnail -->
    <div class="form-control">
      <label
        for="thumbnail"
        class="label text-lg font-semibold text-gray-700 flex items-center space-x-2"
      >
        <i data-lucide="image"></i>
        <span>Thumbnail</span>
      </label>
      <input
        type="file"
        id="thumbnailInput"
        class="file-input file-input-bordered w-full"
        accept="image/*"
      />
      <input type="text" name="thumbnail" id="thumbnail" class="hidden" />
    </div>

    <!-- Category -->
    <div class="form-control">
      <label
        for="category"
        class="label text-lg font-semibold text-gray-700 flex items-center space-x-2"
      >
        <i data-lucide="folder"></i>
        <span>Category</span>
      </label>
      <select name="category_id" id="category" class="select select-bordered w-full" required>
        <option value="" disabled selected>Select a category</option>
        {{#each categories}}
        <option value="{{this.id}}">{{this.name}}</option>
        {{/each}}
      </select>
    </div>

    <!-- Tags -->
    <div class="form-control">
      <label
        for="tags"
        class="label text-lg font-semibold text-gray-700 flex items-center space-x-2"
      >
        <i data-lucide="tag"></i>
        <span>Tags</span>
      </label>
      <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
        {{#each tags}}
        <div class="flex items-center space-x-2">
          <input
            type="checkbox"
            name="tags"
            value="{{this.id}}"
            id="tag-{{this.id}}"
            class="checkbox"
          />
          <label for="tag-{{this.id}}" class="text-sm text-gray-600">{{this.name}}</label>
        </div>
        {{/each}}
      </div>
    </div>

    <!-- Is Premium -->
    <div class="form-control flex items-center">
      <label
        for="is_premium"
        class="label text-lg font-semibold text-gray-700 flex items-center space-x-2"
      >
        <i data-lucide="star"></i>
        <span>Is Premium</span>
      </label>
      <input
        type="checkbox"
        name="is_premium"
        id="is_premium"
        class="checkbox checkbox-primary ml-4"
      />
    </div>

    <!-- Submit Button -->
    <div class="flex justify-center">
      <button type="submit" class="btn btn-primary flex items-center space-x-2 w-full sm:w-auto">
        <i data-lucide="check-circle"></i>
        <span>Create Article</span>
      </button>
    </div>
  </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/quill@1.3.7/dist/quill.js"></script>
<link href="https://cdn.jsdelivr.net/npm/quill@1.3.7/dist/quill.snow.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/quill-image-uploader/dist/quill.imageUploader.min.js"></script>
<script>
  // Register custom button handlers for image and video insertion
  const toolbarOptions = [
    ['bold', 'italic', 'underline'], // Text formatting
    [{ header: [1, 2, 3, false] }], // Headers
    [{ list: 'ordered' }, { list: 'bullet' }], // Lists
    ['image', 'video'], // Image and video buttons
  ]

  Quill.register('modules/imageUploader', window.ImageUploader)
  const quill = new Quill('#content', {
    theme: 'snow',
    modules: {
      toolbar: toolbarOptions,
    },
  })

  // Custom handler for image
  document.querySelector('.ql-image').addEventListener('click', function (event) {
    event.preventDefault() // Ngăn chặn hành vi mặc định
    const imageUrl = prompt('Enter the image URL:')
    if (imageUrl) {
      const range = quill.getSelection()
      quill.insertEmbed(range.index, 'image', imageUrl)
    }
  })

  // Custom handler for video
  document.querySelector('.ql-video').addEventListener('click', function (event) {
    event.preventDefault() // Ngăn hành vi mặc định
    const videoUrl = prompt('Enter the YouTube video URL:')
    if (videoUrl) {
      const youtubeRegex = /https:\/\/www\.youtube\.com\/watch\?v=([a-zA-Z0-9_-]+)/
      const match = videoUrl.match(youtubeRegex)

      if (match) {
        const youtubeEmbedUrl = `https://www.youtube.com/embed/${match[1]}`
        const range = quill.getSelection()
        quill.insertEmbed(range.index, 'video', youtubeEmbedUrl)
      } else {
        alert('Invalid YouTube URL. Please enter a valid URL.')
      }
    }
  })
</script>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('#createArticleForm')
    const thumbnailInput = document.querySelector('#thumbnailInput')
    const previewDiv = document.createElement('div')
    thumbnailInput.parentElement.appendChild(previewDiv) // Add preview container after input

    let uploadedImageUrl = null // Store the uploaded image URL

    // Handle local preview of the selected image
    thumbnailInput.addEventListener('change', (event) => {
      const file = event.target.files[0]

      if (file) {
        // Show local image preview
        const reader = new FileReader()
        reader.onload = function (e) {
          previewDiv.innerHTML = `<img src="${e.target.result}" alt="Thumbnail Preview" class="w-32 h-32 object-cover mt-4 rounded-md" />`
        }
        reader.readAsDataURL(file)
      }
    })

    // Handle form submission
    if (form) {
      form.addEventListener('submit', async function (event) {
        event.preventDefault()

        const file = thumbnailInput.files[0]
        if (!file) {
          alert('Please select a thumbnail image.')
          return
        }

        const formData = new FormData()
        formData.append('image', file)

        const apiKey = '{{imgbbApiKey}}'
        console.log(apiKey)
        const url = `https://api.imgbb.com/1/upload?key=${apiKey}`
        let canSubmit = false
        try {
          // Upload image to ImgBB
          const response = await fetch(url, {
            method: 'POST',
            body: formData,
          })

          const result = await response.json()
          if (result.success) {
            uploadedImageUrl = result.data.url
            console.log('Uploaded 111 URL:', uploadedImageUrl)
            const content = quill.root.innerHTML.trim()
            document.querySelector('#hiddenContent').value = content
            document.querySelector('#thumbnail').value = uploadedImageUrl

            const formDatatmp = new FormData(form)
            console.log(formDatatmp.forEach((value, key) => console.log(key, value)))
            canSubmit = true
          } else {
            console.error('Image upload failed:', result)
            alert('Failed to upload image. Please try again.')
          }
        } catch (error) {
          console.error('Error uploading image:', error)
          alert('An error occurred during the upload.')
        }
        if (canSubmit) {
          this.submit()
        }
      })
    }
  })
</script>
