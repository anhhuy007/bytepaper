{{!-- views/admin/articles.hbs --}}
<div class="container mx-auto px-4 py-8">
  <!-- Page Header -->
  <div class="flex justify-between items-center mb-8">
    <h1 class="text-4xl font-extrabold text-gray-800 flex items-center space-x-2">
      <i data-lucide="file-text" class="text-blue-500"></i>
      <span>Articles Management</span>
    </h1>
  </div>

  <!-- Filter Section -->
  <div class="bg-gray-100 p-6 rounded-lg shadow-lg mb-8">
    <form method="GET" class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-6 gap-4">
      <!-- Keyword Filter -->
      <div class="col-span-2 lg:col-span-2">
        <label for="keyword" class="text-sm font-medium text-gray-600 mb-1 flex items-center space-x-2">
          <i data-lucide="search"></i>
          <span>Search Articles</span>
        </label>
        <input
          type="text"
          id="keyword"
          name="keyword"
          class="input input-bordered w-full"
          placeholder="Keyword"
          value="{{query.keyword}}"
        />
      </div>

      <!-- Category Filter -->
      <div>
        <label for="category_id" class="text-sm font-medium text-gray-600 mb-1 flex items-center space-x-2">
          <i data-lucide="folder"></i>
          <span>Category</span>
        </label>
        <select id="category_id" name="category_id" class="select select-bordered w-full">
          <option value="">All Categories</option>
          {{#each categories}}
          <option value="{{this.id}}" {{#if (eq ../selectedCategory this.id)}}selected{{/if}}>
            {{this.name}}
          </option>
          {{/each}}
        </select>
      </div>

      <!-- Status Filter -->
      <div>
        <label for="status" class="text-sm font-medium text-gray-600 mb-1 flex items-center space-x-2">
          <i data-lucide="check-circle"></i>
          <span>Status</span>
        </label>
        <select id="status" name="status" class="select select-bordered w-full">
          <option value="">All Statuses</option>
          {{#each statuses}}
          <option value="{{this}}" {{#if (eq ../query.status this)}}selected{{/if}}>
            {{this}}
          </option>
          {{/each}}
        </select>
      </div>

      <!-- Sort By -->
      <div>
        <label for="orderBy" class="text-sm font-medium text-gray-600 mb-1 flex items-center space-x-2">
          <i data-lucide="sort-desc"></i>
          <span>Sort By</span>
        </label>
        <select id="orderBy" name="orderBy" class="select select-bordered w-full">
          <option value="published_at DESC" {{#if (eq query.orderBy "published_at DESC")}}selected{{/if}}>Newest</option>
          <option value="published_at ASC" {{#if (eq query.orderBy "published_at ASC")}}selected{{/if}}>Oldest</option>
        </select>
      </div>

      <!-- Limit -->
      <div>
        <label for="limit" class="text-sm font-medium text-gray-600 mb-1 flex items-center space-x-2">
          <i data-lucide="list"></i>
          <span>Items per Page</span>
        </label>
        <input
          type="number"
          id="limit"
          name="limit"
          class="input input-bordered w-full"
          placeholder="Items per page"
          min="1"
          value="{{query.limit}}"
        />
      </div>

      <!-- Buttons -->
      <div class="flex items-end space-x-4 col-span-3 lg:col-span-1 justify-end">
        <button type="submit" class="btn btn-primary hover:shadow-md flex items-center space-x-2">
          <i data-lucide="filter"></i>
          <span>Apply</span>
        </button>
        <a href="/admin/articles" class="btn btn-secondary hover:shadow-md flex items-center space-x-2">
          <i data-lucide="refresh-cw"></i>
          <span>Reset</span>
        </a>
      </div>
    </form>
  </div>

  <!-- Articles Table -->
  <div class="overflow-x-auto bg-white shadow-md rounded-lg">
    <table class="table w-full border-collapse border border-gray-300">
      <thead class="bg-gray-200 text-gray-700">
        <tr>
          <th class="py-3 px-4">Title</th>
          <th class="py-3 px-4">Author</th>
          <th class="py-3 px-4">Category</th>
          <th class="py-3 px-4">Status</th>
          <th class="py-3 px-4">Published At</th>
          <th class="py-3 px-4">Actions</th>
        </tr>
      </thead>
      <tbody class="text-gray-600">
        {{#each articles}}
        <tr class="hover:bg-gray-100">
          <td class="py-2 px-4">{{this.title}}</td>
          <td class="py-2 px-4">{{this.author_name}}</td>
          <td class="py-2 px-4">{{this.category_name}}</td>
          <td class="py-2 px-4">
            <form
              id="status-form-{{this.id}}"
              class="flex items-center space-x-2"
              data-article-id="{{this.id}}"
            >
              <select
                name="status"
                class="select select-bordered select-xs"
                {{#unless (or (eq this.status 'draft') (eq this.status 'published'))}}disabled{{/unless}}
                onchange="handleStatusChange(event, {{this.id}}, '{{this.status}}')"
              >
                {{#if (or (eq this.status 'draft') (eq this.status 'published'))}}
                  <option value="draft" {{#if (eq this.status 'draft')}}selected{{/if}}>Draft</option>
                  <option value="published" {{#if (eq this.status 'published')}}selected{{/if}}>Published</option>
                {{else}}
                  <option value="{{this.status}}" selected>{{this.status}}</option>
                {{/if}}
              </select>
              <button
                id="status-btn-{{this.id}}"
                type="button"
                class="btn btn-sm btn-primary hover:shadow-md flex items-center space-x-1 hidden"
              >
                <i data-lucide="check"></i>
                <span></span>
              </button>
            </form>
          </td>
          <td class="py-2 px-4">{{formatDate this.published_at}}</td>
          <td class="py-2 px-4">
            <form
              action="/admin/articles/delete/{{this.id}}"
              method="POST"
              style="display: inline-block"
              onsubmit="return confirm('Are you sure you want to delete this article?');"
            >
              <button type="submit" class="btn btn-sm btn-error hover:shadow-md flex items-center space-x-2">
                <i data-lucide="trash-2"></i>
                <span>Delete</span>
              </button>
            </form>
          </td>
        </tr>
        {{/each}}
      </tbody>
    </table>
  </div>

  <!-- Pagination -->
  <div class="mt-6">
    {{> pagination query=query totalPages=totalPages currentPage=currentPage }}
  </div>
</div>

<script>
  async function handleStatusChange(event, articleId, currentStatus) {
    const selectedStatus = event.target.value;
    const button = document.getElementById(`status-btn-${articleId}`);

    // Determine button label and visibility
    if (selectedStatus !== currentStatus) {
      button.classList.remove("hidden"); // Show button
      button.querySelector("span").textContent =
        selectedStatus === "draft" && currentStatus === "published"
          ? "Unpublish"
          : selectedStatus === "published" && currentStatus === "draft"
          ? "Publish"
          : "Save";

      // Attach click event listener
      button.onclick = async () => {
        const confirmMessage = `Are you sure you want to change the status from "${currentStatus}" to "${selectedStatus}"?`;
        if (!confirm(confirmMessage)) {
          // Revert the select dropdown to the current status if canceled
          event.target.value = currentStatus;
          return;
        }

        // Proceed with the status update
        try {
          const response = await axios.post(`/admin/articles/status/${articleId}`, {
            status: selectedStatus,
          });
          if (response.status === 200) {
            alert("Status updated successfully.");
            window.location.reload(); // Reload to reflect changes
          }
        } catch (error) {
          console.error("Error updating status:", error);
          alert("Failed to update status. Please try again.");
        }
      };
    } else {
      button.classList.add("hidden"); // Hide button
    }
  }
</script>




